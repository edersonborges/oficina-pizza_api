generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
//  Modelo usuario
//
model usuario {
  id        String    @id @default(uuid()) @map("_id")
  nome      String
  email     String    @unique
  telefone  String
  senha     String
  tipo      Int       @default(3)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  pedidos   pedido[]
  enderecos endereco[]
}

//
//  Modelo endereco
//
model endereco {
  id          String   @id @default(uuid()) @map("_id")
  usuarioId   String   @map("usuario_id")
  rua         String
  numero      String
  bairro      String
  cidade      String
  cep         String
  complemento String?
  padrao      Boolean  @default(false)
  latitude    Float
  longitude   Float

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  // Relação com usuario
  usuario     usuario  @relation(fields: [usuarioId], references: [id])
}

//
//  Modelo categoria
//
model categoria {
  id           String    @id @default(uuid()) @map("_id")
  nome         String

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?

  subCategoria subCategoria[]
}

//
//  Modelo subCategoria
//
model subCategoria {
  id            String       @id @default(uuid()) @map("_id")
  nome          String
  categoriaId   String       @map("categoria_id")
  categoria     categoria    @relation(fields: [categoriaId], references: [id])

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  deletedAt     DateTime?

  itens         itens[]
}

//
//  Modelo arquivos
//
model arquivos {
  id        String     @id @default(uuid()) @map("_id")
  img_key   String
  tipo      String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?

  // Relações com outros modelos
  sabores   sabores[]
  massas    massas[]
  itens     itens[]

  lojaId    String?   @map("loja_id")
  loja      loja?     @relation(fields: [lojaId], references: [id])

  promocaoId String?  @map("promocao_id")
  promocao   promocao? @relation(fields: [promocaoId], references: [id])
}

//
//  Modelo itens
//
model itens {
  id              String        @id @default(uuid()) @map("_id")
  nome            String
  descricao       String
  preco           Float
  ativo           Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?

  imagemId        String?       @map("imagem_id")
  arquivo         arquivos?     @relation(fields: [imagemId], references: [id])

  subCategoriaId  String        @map("sub_categoria_id")
  subCategoria    subCategoria  @relation(fields: [subCategoriaId], references: [id])

  // Exemplos de relações N:N (ou 1:N) sem nomes
  sabores         sabores[]
  massas          massas[]
  adicionais      adicionais[]
  tamanhos        tamanhos[]

  // Relação com pedido_itens
  pedidoItens     pedido_itens[]
}

//
//  Modelo sabores
//
model sabores {
  id          String     @id @default(uuid()) @map("_id")
  nome        String
  descricao   String
  valor       Float
  ativo       Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?

  imagemId    String?    @map("imagem_id")
  arquivo     arquivos?  @relation(fields: [imagemId], references: [id])

  itens       itens[]
}

//
//  Modelo massas
//
model massas {
  id          String     @id @default(uuid()) @map("_id")
  nome        String
  descricao   String
  valor       Float
  ativo       Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?

  imagemId    String?    @map("imagem_id")
  arquivo     arquivos?  @relation(fields: [imagemId], references: [id])

  itens       itens[]
}

//
//  Modelo adicionais
//
model adicionais {
  id          String           @id @default(uuid()) @map("_id")
  nome        String
  valor       Float
  qntd        Int
  ativo       Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?

  itens       itens[]
  pedidoAdcs  pedido_itens_adc[]
}

//
//  Modelo tamanhos
//
model tamanhos {
  id          String    @id @default(uuid()) @map("_id")
  nome        String
  pedacos     Int
  valor       Float
  ativo       Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  itens       itens[]
}

//
//  Modelo loja
//
model loja {
  id           String               @id @default(uuid()) @map("_id")
  nome         String
  descricao    String
  pedidoMin    Float
  cep          String
  rua          String
  numero       String
  bairro       String
  cidade       String

  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  deletedAt    DateTime?

  imagens      arquivos[]

  horarios     horarioFuncionamento[]
  pausas       pausaServico[]
  feriados     feriado[]

  pedidos      pedido[]
}

//
//  Modelo horarioFuncionamento
//
model horarioFuncionamento {
  id             String   @id @default(uuid()) @map("_id")
  diaSemana      Int
  horaAbertura   DateTime?
  horaFechamento DateTime?
  aberto         Boolean  @default(true)

  lojaId         String   @map("loja_id")
  loja           loja     @relation(fields: [lojaId], references: [id])

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

//
//  Modelo pausaServico
//
model pausaServico {
  id          String    @id @default(uuid()) @map("_id")
  dataInicio  DateTime
  dataFim     DateTime?
  descricao   String?

  lojaId      String    @map("loja_id")
  loja        loja      @relation(fields: [lojaId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

//
//  Modelo feriado
//
model feriado {
  id             String   @id @default(uuid()) @map("_id")
  data           DateTime
  horaAbertura   DateTime?
  horaFechamento DateTime?
  aberto         Boolean  @default(true)
  descricao      String?

  lojaId         String   @map("loja_id")
  loja           loja     @relation(fields: [lojaId], references: [id])

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

//
//  Modelo entrega
//
model entrega {
  id        String   @id @default(uuid()) @map("_id")
  tipo      String
  tempo     String
  taxa      Float
  ativo     Boolean  @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
//  Modelo cupom_desconto
//
model cupom_desconto {
  id          String   @id @default(uuid()) @map("_id")
  tipo        String
  dataInicio  DateTime
  dataFim     DateTime?
  descricao   String
  valor       Float
  publico     Boolean
  qntd        Int

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
}

//
//  Modelo promocao
//
model promocao {
  id         String     @id @default(uuid()) @map("_id")
  nome       String
  descricao  String
  valor      Float

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  imagens    arquivos[]
}

//
//  Modelo promocao_itens
//
model promocao_itens {
  id         String    @id @default(uuid()) @map("_id")
  nome       String
  descricao  String
  valor      Float

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

//
//  Modelo pagamentos
//
model pagamentos {
  id           String   @id @default(uuid()) @map("_id")
  transacaoId  String
  forma        String
  status       String
  valor        Float

  pedidoId     String   @map("pedido_id") // NÃO é @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relação 1:N (muitos pagamentos → 1 pedido)
  pedido       pedido   @relation(fields: [pedidoId], references: [id])
}

//
//  Modelo pedido
//
model pedido {
  id               String           @id @default(uuid()) @map("_id")
  usuarioId        String?          @map("usuario_id")
  usuario          usuario?         @relation(fields: [usuarioId], references: [id])

  formaPagamentoId String?          @map("forma_pagamento_id")
  formaPagamento   forma_pagamento? @relation(fields: [formaPagamentoId], references: [id])

  itens            pedido_itens[]
  avaliacao        avaliacoes?

  lojaId           String?          @map("loja_id")
  loja             loja?            @relation(fields: [lojaId], references: [id])

  // Múltiplos pagamentos podem referenciar 1 pedido
  pagamentos       pagamentos[]

  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  deletedAt        DateTime?
}

//
//  Modelo forma_pagamento
//
model forma_pagamento {
  id        String    @id @default(uuid()) @map("_id")
  nome      String
  ativo     Boolean   @default(true)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  pedidos   pedido[]
}

//
//  Modelo avaliacoes
//
model avaliacoes {
  id          String   @id @default(uuid()) @map("_id")
  nota        Int
  comentario  String
  pedidoId    String   @map("pedido_id")

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  pedido      pedido   @relation(fields: [pedidoId], references: [id])
}

//
//  Modelo pedido_itens
//
model pedido_itens {
  id         String   @id @default(uuid()) @map("_id")
  pedidoId   String   @map("pedido_id")
  itemId     String   @map("item_id")
  quantidade Int
  preco      Float

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  pedido     pedido   @relation(fields: [pedidoId], references: [id])
  item       itens    @relation(fields: [itemId], references: [id])

  adicionais pedido_itens_adc[]
}

//
//  Modelo pedido_itens_adc
//
model pedido_itens_adc {
  id           String         @id @default(uuid()) @map("_id")
  pedidoItemId String         @map("pedido_itens_id")
  adicionalId  String         @map("adicional_id")
  quantidade   Int
  preco        Float

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  pedidoItem   pedido_itens   @relation(fields: [pedidoItemId], references: [id])
  adicional    adicionais     @relation(fields: [adicionalId], references: [id])
}
